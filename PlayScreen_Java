package com.example.kristof.tuneplay;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.media.MediaPlayer;
import java.util.Random;
import android.content.Intent;



public class PlayScreen extends AppCompatActivity {

    int[] songArray;
    int Size;
    int Count = 0;
    boolean donePlaying = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_play_screen);

        //Creates arrays representing the songs for level 1
        int[] L1Song1 = {1, 2, 3};
        int[] L1Song2 = {4, 5, 6};
        int[] L1Song3 = {7, 1, 5};

        //Randomly plays one of the songs
        Random randGen = new Random();
        int randInt = randGen.nextInt(3);
        if(randInt == 0){
            songArray = L1Song1;
        }
        else if(randInt == 1){
            songArray = L1Song2;
        }
        else if(randInt == 2) {
            songArray = L1Song3;
        }
    }

    public void showMe(){
        Size = 3;
        playSongFunc(songArray, Size);
    }


    public void playSongFunc(int[] CurrentSong, int Size){
        for(int i = 0; i<Size; i=i+1){
            switch(CurrentSong[i]) {
                case 1:
                    playP1();
                    break;
                case 2:
                    playP2();
                    break;
                case 3:
                    playP3();
                    break;
                case 4:
                    playG1();
                    break;
                case 5:
                    playG2();
                    break;
                case 6:
                    playD1();
                    break;
                case 7:
                    playD2();
                    break;
            }

            try {
                Thread.sleep(1000);
            }
            catch(InterruptedException ex) {
                Thread.currentThread().interrupt();
            }

        }
        donePlaying = true;
    }

    public void playP1(){
        // code to produce sound when left piano key is clicked
        MediaPlayer p1 = MediaPlayer.create(getApplicationContext(), R.raw.piano_g3);
        p1.start();
        if(donePlaying) {
            check(1);
        }
    }

    public void playP2(){
        // code to produce sound when middle piano key is clicked
        MediaPlayer p2 = MediaPlayer.create(getApplicationContext(), R.raw.piano_a3);
        p2.start();
        if(donePlaying) {
            check(2);
        }
    }

    public void playP3(){
        // code to produce sound when right piano key is clicked
        MediaPlayer p3 = MediaPlayer.create(getApplicationContext(), R.raw.piano_b3);
        p3.start();
        if(donePlaying) {
            check(3);
        }
    }

    public void playG1(){
        // code to produce sound when top guitar string is clicked
        MediaPlayer g1 = MediaPlayer.create(getApplicationContext(), R.raw.guitar_c);
        g1.start();
        if(donePlaying) {
            check(4);
        }
    }

    public void playG2(){
        // code to produce sound when bottom guitar string is clicked
        MediaPlayer g2 = MediaPlayer.create(getApplicationContext(), R.raw.guitar_d);
        g2.start();
        if(donePlaying) {
            check(5);
        }
    }

    public void playD1(){
        // code to produce sound when left drum is clicked
        MediaPlayer d1 = MediaPlayer.create(getApplicationContext(), R.raw.snare);
        d1.start();
        if(donePlaying) {
            check(6);
        }
    }

    public void playD2(){
        // code to produce sound when right drum is clicked
        MediaPlayer d2 = MediaPlayer.create(getApplicationContext(), R.raw.cymbal);
        d2.start();
        if(donePlaying) {
            check(7);
        }
    }

    void check(int butpress){
        // checks user input against array
        if(butpress == songArray[Count]){
            Count = Count+1;
            if(Count == Size){
                //Next level screen
                Intent goToNextLevel = new Intent(this, nextLevelScreen.class);
                startActivity(goToNextLevel);
            }
        }
        else {
            // Game Over
            Intent goToGameOver = new Intent(this, gameOverScreen.class);
            startActivity(goToGameOver);
        }
    }
}
